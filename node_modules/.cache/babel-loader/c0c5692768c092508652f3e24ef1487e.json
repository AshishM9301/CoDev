{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\KIIT\\\\Documents\\\\Projects\\\\OPEN\\\\DevLearn\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\KIIT\\\\Documents\\\\Projects\\\\OPEN\\\\DevLearn\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\KIIT\\\\Documents\\\\Projects\\\\OPEN\\\\DevLearn\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\KIIT\\\\Documents\\\\Projects\\\\OPEN\\\\DevLearn\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import PropTypes from'prop-types';import{connect}from'react-redux';import{signIn,signOut}from'../../actions';export var GoogleAuth=/*#__PURE__*/function(_Component){_inherits(GoogleAuth,_Component);var _super=_createSuper(GoogleAuth);function GoogleAuth(){var _this;_classCallCheck(this,GoogleAuth);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onAuthChange=function(isSignedIn){console.log(_this.props);if(isSignedIn){_this.props.signIn(_this.auth.currentUser.get().getId());console.log(_this.props);}else{_this.props.signOut();}};_this.onSignInClick=function(){console.log(_this.props);_this.auth.signIn();};_this.onSignOutClick=function(){_this.auth.signOut();};return _this;}_createClass(GoogleAuth,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;console.log(this.props);window.gapi.load('client:auth2',function(){console.log('Loaded GAPI');window.gapi.client.init({clientId:'559727615856-1akuiiknf4ecb5moqlvvti8b9h5l8m1j.apps.googleusercontent.com',scope:'email'}).then(function(){console.log('Initialise Gapi');_this2.auth=window.gapi.auth2.getAuthInstance();console.log(_this2.auth);_this2.onAuthChange(_this2.auth.isSignedIn.get());console.log(_this2.onAuthChange);_this2.auth.isSignedIn.listen(_this2.onAuthChange);});});}},{key:\"renderAuthButton\",value:function renderAuthButton(){if(this.props.isSignedIn===null){return null;}else if(this.props.isSignedIn){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:this.onSignOutClick,className:\"ui red google button\"},/*#__PURE__*/React.createElement(\"i\",{className:\"google icon\"}),\"Sign Out\"));}else{return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:this.onSignInClick,className:\"ui red google button\"},/*#__PURE__*/React.createElement(\"i\",{className:\"google icon\"}),\"Sign In\"));}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,this.renderAuthButton());}}]);return GoogleAuth;}(Component);var propTypes={signIn:PropTypes.func.isRequired,signOut:PropTypes.func.isRequired};var mapStateToProps=function mapStateToProps(state){return{isSignedIn:state.auth.isSignedIn};};export default connect(mapStateToProps,{signIn:signIn,signOut:signOut})(GoogleAuth);","map":{"version":3,"sources":["C:/Users/KIIT/Documents/Projects/OPEN/DevLearn/client/src/components/GoogleAuth/GoogleAuth.js"],"names":["React","Component","PropTypes","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","console","log","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"gtBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,MAAT,CAAiBC,OAAjB,KAAgC,eAAhC,CAEA,UAAaC,CAAAA,UAAb,2UAsBEC,YAtBF,CAsBiB,SAACC,UAAD,CAAgB,CAC7BC,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAjB,EACA,GAAIH,UAAJ,CAAgB,CACd,MAAKG,KAAL,CAAWP,MAAX,CAAkB,MAAKQ,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB,EACAN,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAjB,EACD,CAHD,IAGO,CACL,MAAKA,KAAL,CAAWN,OAAX,GACD,CACF,CA9BH,OAgCEW,aAhCF,CAgCkB,UAAM,CACpBP,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAjB,EACA,MAAKC,IAAL,CAAUR,MAAV,GACD,CAnCH,OAqCEa,cArCF,CAqCmB,UAAM,CACrB,MAAKL,IAAL,CAAUP,OAAV,GACD,CAvCH,mGACsB,iBAClBI,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EACAO,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,CAAiC,UAAM,CACrCX,OAAO,CAACC,GAAR,CAAY,aAAZ,EACAQ,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ,CACJC,QAAQ,CACN,0EAFE,CAGJC,KAAK,CAAE,OAHH,CADR,EAMGC,IANH,CAMQ,UAAM,CACVhB,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACA,MAAI,CAACE,IAAL,CAAYM,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ,CACAlB,OAAO,CAACC,GAAR,CAAY,MAAI,CAACE,IAAjB,EACA,MAAI,CAACL,YAAL,CAAkB,MAAI,CAACK,IAAL,CAAUJ,UAAV,CAAqBM,GAArB,EAAlB,EACAL,OAAO,CAACC,GAAR,CAAY,MAAI,CAACH,YAAjB,EACA,MAAI,CAACK,IAAL,CAAUJ,UAAV,CAAqBoB,MAArB,CAA4B,MAAI,CAACrB,YAAjC,EACD,CAbH,EAcD,CAhBD,EAiBD,CApBH,2DAyCqB,CACjB,GAAI,KAAKI,KAAL,CAAWH,UAAX,GAA0B,IAA9B,CAAoC,CAClC,MAAO,KAAP,CACD,CAFD,IAEO,IAAI,KAAKG,KAAL,CAAWH,UAAf,CAA2B,CAChC,mBACE,4CACE,8BACE,OAAO,CAAE,KAAKS,cADhB,CAEE,SAAS,CAAC,sBAFZ,eAGE,yBAAG,SAAS,CAAC,aAAb,EAHF,YADF,CADF,CAUD,CAXM,IAWA,CACL,mBACE,4CACE,8BAAQ,OAAO,CAAE,KAAKD,aAAtB,CAAqC,SAAS,CAAC,sBAA/C,eACE,yBAAG,SAAS,CAAC,aAAb,EADF,WADF,CADF,CAQD,CACF,CAjEH,uCAmEW,CACP,mBAAO,+BAAM,KAAKa,gBAAL,EAAN,CAAP,CACD,CArEH,wBAAgC5B,SAAhC,EAwEA,GAAM6B,CAAAA,SAAS,CAAG,CAChB1B,MAAM,CAAEF,SAAS,CAAC6B,IAAV,CAAeC,UADP,CAEhB3B,OAAO,CAAEH,SAAS,CAAC6B,IAAV,CAAeC,UAFR,CAAlB,CAKA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CAAE1B,UAAU,CAAE0B,KAAK,CAACtB,IAAN,CAAWJ,UAAzB,CAAP,CACD,CAFD,CAIA,cAAeL,CAAAA,OAAO,CAAC8B,eAAD,CAAkB,CAAE7B,MAAM,CAANA,MAAF,CAAUC,OAAO,CAAPA,OAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { signIn, signOut } from '../../actions';\r\n\r\nexport class GoogleAuth extends Component {\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    window.gapi.load('client:auth2', () => {\r\n      console.log('Loaded GAPI');\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            '559727615856-1akuiiknf4ecb5moqlvvti8b9h5l8m1j.apps.googleusercontent.com',\r\n          scope: 'email',\r\n        })\r\n        .then(() => {\r\n          console.log('Initialise Gapi');\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          console.log(this.auth);\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          console.log(this.onAuthChange);\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = (isSignedIn) => {\r\n    console.log(this.props);\r\n    if (isSignedIn) {\r\n      this.props.signIn(this.auth.currentUser.get().getId());\r\n      console.log(this.props);\r\n    } else {\r\n      this.props.signOut();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    console.log(this.props);\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return null;\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <div>\r\n          <button\r\n            onClick={this.onSignOutClick}\r\n            className='ui red google button'>\r\n            <i className='google icon' />\r\n            Sign Out\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button onClick={this.onSignInClick} className='ui red google button'>\r\n            <i className='google icon' />\r\n            Sign In\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderAuthButton()}</div>;\r\n  }\r\n}\r\n\r\nconst propTypes = {\r\n  signIn: PropTypes.func.isRequired,\r\n  signOut: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isSignedIn: state.auth.isSignedIn };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\r\n"]},"metadata":{},"sourceType":"module"}