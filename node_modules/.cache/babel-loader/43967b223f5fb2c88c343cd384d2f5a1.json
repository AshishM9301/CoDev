{"ast":null,"code":"import { ERROR_DELETE, ERROR_FETCH, ERROR_SHOW, REGISTER_FAIL, SIGN_IN, SIGN_OUT, GET_ERROR, CLEAR_ERROR, REGISTERSUCCESS } from './types';\nimport connect from '../routes/connect';\nimport { Register } from '../components/Header/Register';\nimport Axios from 'axios';\nexport const getError = error => {\n  return {\n    type: GET_ERROR,\n    payload: error\n  };\n};\nexport const clearError = error => {\n  return {\n    type: CLEAR_ERROR\n  };\n};\nexport const signIn = (dispatch, getState) => {\n  return {\n    type: SIGN_IN\n  };\n};\nexport const register = formValues => {\n  console.log(formValues);\n  return dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify(formValues, null, 5);\n    console.log(body);\n    Axios.post('http://localhost:5000/api/users/register', body, config).then(res => {\n      dispatch({\n        type: REGISTERSUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/KIIT/Documents/Projects/OPEN/mern-boilerplate/client/src/actions/index.js"],"names":["ERROR_DELETE","ERROR_FETCH","ERROR_SHOW","REGISTER_FAIL","SIGN_IN","SIGN_OUT","GET_ERROR","CLEAR_ERROR","REGISTERSUCCESS","connect","Register","Axios","getError","error","type","payload","clearError","signIn","dispatch","getState","register","formValues","console","log","config","headers","body","JSON","stringify","post","then","res","data","catch","err"],"mappings":"AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,OALF,EAMEC,QANF,EAOEC,SAPF,EAQEC,WARF,EASEC,eATF,QAUO,SAVP;AAWA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAER,SADD;AAELS,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,UAAU,GAAIH,KAAD,IAAW;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEP;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMU,MAAM,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC5C,SAAO;AACLL,IAAAA,IAAI,EAAEV;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMgB,QAAQ,GAAIC,UAAD,IAAgB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,SAAQH,QAAD,IAAc;AACnB,UAAMM,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeP,UAAf,EAA2B,IAA3B,EAAiC,CAAjC,CAAb;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AAEAf,IAAAA,KAAK,CAACkB,IAAN,CAAW,0CAAX,EAAuDH,IAAvD,EAA6DF,MAA7D,EACGM,IADH,CACSC,GAAD,IAAS;AACbb,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAEN,eADC;AAEPO,QAAAA,OAAO,EAAEgB,GAAG,CAACC;AAFN,OAAD,CAAR;AAID,KANH,EAOGC,KAPH,CAOUC,GAAD,IAAS;AACdhB,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAEX,aADC;AAEPY,QAAAA,OAAO,EAAEmB,GAAG,CAACF;AAFN,OAAD,CAAR;AAID,KAZH;AAaD,GAxBD;AAyBD,CA3BM","sourcesContent":["import {\r\n  ERROR_DELETE,\r\n  ERROR_FETCH,\r\n  ERROR_SHOW,\r\n  REGISTER_FAIL,\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  GET_ERROR,\r\n  CLEAR_ERROR,\r\n  REGISTERSUCCESS,\r\n} from './types';\r\nimport connect from '../routes/connect';\r\nimport { Register } from '../components/Header/Register';\r\nimport Axios from 'axios';\r\n\r\nexport const getError = (error) => {\r\n  return {\r\n    type: GET_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const clearError = (error) => {\r\n  return {\r\n    type: CLEAR_ERROR,\r\n  };\r\n};\r\n\r\nexport const signIn = (dispatch, getState) => {\r\n  return {\r\n    type: SIGN_IN,\r\n  };\r\n};\r\n\r\nexport const register = (formValues) => {\r\n  console.log(formValues);\r\n  return (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify(formValues, null, 5);\r\n\r\n    console.log(body);\r\n\r\n    Axios.post('http://localhost:5000/api/users/register', body, config)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: REGISTERSUCCESS,\r\n          payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: REGISTER_FAIL,\r\n          payload: err.data,\r\n        });\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}