{"ast":null,"code":"import { REGISTERSUCCESS, REGISTER_FAIL } from '../actions/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isRegistered: false,\n  user: null,\n  success: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case REGISTERSUCCESS:\n      return { ...state,\n        msg: action.payload.message,\n        success: true\n      };\n\n    case REGISTER_FAIL:\n      return { ...state,\n        success: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/KIIT/Documents/Projects/OPEN/mern-boilerplate/client/src/reducers/authReducer.js"],"names":["REGISTERSUCCESS","REGISTER_FAIL","initialState","token","localStorage","getItem","isRegistered","user","success","state","action","type","msg","payload","message"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,aAA1B,QAA+C,kBAA/C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,YAAY,EAAE,KAFK;AAGnBC,EAAAA,IAAI,EAAE,IAHa;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,eAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELG,QAAAA,GAAG,EAAEF,MAAM,CAACG,OAAP,CAAeC,OAFf;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,aAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF;AACE,aAAOC,KAAP;AAbJ;AAeD","sourcesContent":["import { REGISTERSUCCESS, REGISTER_FAIL } from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isRegistered: false,\r\n  user: null,\r\n  success: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case REGISTERSUCCESS:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.message,\r\n        success: true,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        success: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}