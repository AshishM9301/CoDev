{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\OPEN\\\\DevLearn\\\\client\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport withAuth from './auth/withAuth';\nimport Header from './Header/Header';\nimport Login from './Header/Login';\nimport Register from './Header/Register';\nimport Footer from './Footer/Footer';\nimport DashBoard from './DashBoard/DashBoard';\nimport Homepage from './Homepage/Homepage';\nimport UploadCoursePage from './UploadCourse/UploadCoursePage';\nimport { connect } from 'react-redux';\nimport NotFound from './404/NotFound';\nimport First_Plan from './Pages/First_Plan';\nimport { loadUser } from '../actions';\nimport { store } from '../index';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.ifAdmin = () => {\n      if (this.props.user.user.role === 99) return /*#__PURE__*/React.createElement(Route, {\n        path: \"/course/upload\",\n        exact: true,\n        component: withAuth(UploadCoursePage),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Homepage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      exact: true,\n      component: Register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      exact: true,\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/dashboard/:id\",\n      component: withAuth(DashBoard),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/plan\",\n      component: First_Plan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), this.ifAdmin, /*#__PURE__*/React.createElement(Route, {\n      path: \"*\",\n      component: NotFound,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {\n  loadUser\n})(App);","map":{"version":3,"sources":["D:/Projects/OPEN/DevLearn/client/src/components/App.js"],"names":["React","Component","Route","Switch","withAuth","Header","Login","Register","Footer","DashBoard","Homepage","UploadCoursePage","connect","NotFound","First_Plan","loadUser","store","App","ifAdmin","props","user","role","componentDidMount","dispatch","render","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport withAuth from './auth/withAuth';\nimport Header from './Header/Header';\nimport Login from './Header/Login';\nimport Register from './Header/Register';\nimport Footer from './Footer/Footer';\nimport DashBoard from './DashBoard/DashBoard';\nimport Homepage from './Homepage/Homepage';\nimport UploadCoursePage from './UploadCourse/UploadCoursePage';\nimport { connect } from 'react-redux';\nimport NotFound from './404/NotFound';\nimport First_Plan from './Pages/First_Plan';\nimport { loadUser } from '../actions';\nimport { store } from '../index';\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n\n  ifAdmin = () => {\n    if (this.props.user.user.role === 99)\n      return (\n        <Route\n          path='/course/upload'\n          exact\n          component={withAuth(UploadCoursePage)}\n        />\n      );\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route path='/' exact component={Homepage} />\n          <Route path='/register' exact component={Register} />\n          <Route path='/login' exact component={Login} />\n          <Route exact path='/dashboard/:id' component={withAuth(DashBoard)} />\n\n          <Route exact path='/plan' component={First_Plan} />\n          {this.ifAdmin}\n          <Route path='*' component={NotFound} />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { loadUser })(App);\n"]},"metadata":{},"sourceType":"module"}