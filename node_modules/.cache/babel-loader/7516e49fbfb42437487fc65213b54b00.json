{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Documents\\\\Projects\\\\OPEN\\\\DevLearn\\\\client\\\\src\\\\components\\\\utils\\\\FileUpload.js\";\nimport React, { useState } from 'react';\nimport DropZone from 'react-dropzone';\nimport Axios from 'axios';\n\nfunction FileUpload(props) {\n  const [Images, setImages] = useState([]);\n\n  const onDrop = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    formData.append('file', files[0]); //save the Image we chose inside the Node Server\n\n    Axios.post('http://localhost:5000/api/product/uploadImage', formData, config).then(res => {\n      if (res.data.success) {\n        setImages([...Images, res.data.image]);\n        props.refreshFunction([...Images, res.data.image]);\n      } else {\n        alert('Failed to save the Image in Server');\n      }\n    });\n  };\n\n  const onDelete = image => {\n    const currentIndex = Images.indexOf(image);\n    let newImages = [...Images];\n    newImages.splice(currentIndex, 1);\n    setImages(newImages);\n    props.refreshFunction(newImages);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DropZone, {\n    onDrop: onDrop,\n    multiple: false,\n    maxSize: 8000000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"h-32 w-64 border-solid border-gray-600 border flex items-center justify-center\"\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), console.log('getRootProps', { ...getRootProps()\n  }), console.log('getInputProps', { ...getInputProps()\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"h-4 w-4\",\n    viewBox: \"0 0 24 24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex w-1/2 h-full overflow-scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, Images.map((image, index) => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => onDelete(image),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"max-w-xs w-64 h-56\",\n    src: `http://localhost:5000/${image}`,\n    alt: `productImg-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/KIIT/Documents/Projects/OPEN/DevLearn/client/src/components/utils/FileUpload.js"],"names":["React","useState","DropZone","Axios","FileUpload","props","Images","setImages","onDrop","files","formData","FormData","config","header","append","post","then","res","data","success","image","refreshFunction","alert","onDelete","currentIndex","indexOf","newImages","splice","getRootProps","getInputProps","console","log","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport DropZone from 'react-dropzone';\r\nimport Axios from 'axios';\r\n\r\nfunction FileUpload(props) {\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const onDrop = (files) => {\r\n    let formData = new FormData();\r\n    const config = {\r\n      header: { 'content-type': 'multipart/form-data' },\r\n    };\r\n    formData.append('file', files[0]);\r\n    //save the Image we chose inside the Node Server\r\n\r\n    Axios.post(\r\n      'http://localhost:5000/api/product/uploadImage',\r\n      formData,\r\n      config\r\n    ).then((res) => {\r\n      if (res.data.success) {\r\n        setImages([...Images, res.data.image]);\r\n        props.refreshFunction([...Images, res.data.image]);\r\n      } else {\r\n        alert('Failed to save the Image in Server');\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDelete = (image) => {\r\n    const currentIndex = Images.indexOf(image);\r\n\r\n    let newImages = [...Images];\r\n    newImages.splice(currentIndex, 1);\r\n    setImages(newImages);\r\n    props.refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div className='flex justify-between'>\r\n      <DropZone onDrop={onDrop} multiple={false} maxSize={8000000}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div\r\n            className='h-32 w-64 border-solid border-gray-600 border flex items-center justify-center'\r\n            {...getRootProps()}>\r\n            {console.log('getRootProps', { ...getRootProps() })}\r\n            {console.log('getInputProps', { ...getInputProps() })}\r\n            <input {...getInputProps()} />\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              className='h-4 w-4'\r\n              viewBox='0 0 24 24'>\r\n              <path d='M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z' />\r\n            </svg>\r\n          </div>\r\n        )}\r\n      </DropZone>\r\n\r\n      <div className='flex w-1/2 h-full overflow-scroll'>\r\n        {Images.map((image, index) => (\r\n          <div onClick={() => onDelete(image)}>\r\n            <img\r\n              className='max-w-xs w-64 h-56'\r\n              src={`http://localhost:5000/${image}`}\r\n              alt={`productImg-${index}`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}