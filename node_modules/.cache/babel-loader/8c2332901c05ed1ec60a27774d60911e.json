{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Documents\\\\Projects\\\\OPEN\\\\DevLearn\\\\client\\\\src\\\\components\\\\GoogleAuth\\\\GoogleAuth.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../../actions';\nexport class GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      console.log(this.props);\n\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getId());\n        console.log(this.props);\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      console.log(this.props);\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    window.gapi.load('client:auth2', () => {\n      console.log('Loaded GAPI');\n      window.gapi.client.init({\n        clientId: '559727615856-1akuiiknf4ecb5moqlvvti8b9h5l8m1j.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        console.log('Initialise Gapi');\n        this.auth = window.gapi.auth2.getAuthInstance();\n        console.log(this.auth);\n        this.onAuthChange(this.auth.isSignedIn.get());\n        console.log(this.onAuthChange);\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui red google button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"google icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }), \"Sign Out\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui red google button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"google icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }), \"Sign In\"));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    }, this.renderAuthButton());\n  }\n\n}\nconst propTypes = {\n  signIn: PropTypes.func.isRequired,\n  signOut: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["C:/Users/KIIT/Documents/Projects/OPEN/DevLearn/client/src/components/GoogleAuth/GoogleAuth.js"],"names":["React","Component","PropTypes","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","console","log","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { signIn, signOut } from '../../actions';\r\n\r\nexport class GoogleAuth extends Component {\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    window.gapi.load('client:auth2', () => {\r\n      console.log('Loaded GAPI');\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            '559727615856-1akuiiknf4ecb5moqlvvti8b9h5l8m1j.apps.googleusercontent.com',\r\n          scope: 'email',\r\n        })\r\n        .then(() => {\r\n          console.log('Initialise Gapi');\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          console.log(this.auth);\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          console.log(this.onAuthChange);\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = (isSignedIn) => {\r\n    console.log(this.props);\r\n    if (isSignedIn) {\r\n      this.props.signIn(this.auth.currentUser.get().getId());\r\n      console.log(this.props);\r\n    } else {\r\n      this.props.signOut();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    console.log(this.props);\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return null;\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <div>\r\n          <button\r\n            onClick={this.onSignOutClick}\r\n            className='ui red google button'>\r\n            <i className='google icon' />\r\n            Sign Out\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button onClick={this.onSignInClick} className='ui red google button'>\r\n            <i className='google icon' />\r\n            Sign In\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderAuthButton()}</div>;\r\n  }\r\n}\r\n\r\nconst propTypes = {\r\n  signIn: PropTypes.func.isRequired,\r\n  signOut: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isSignedIn: state.auth.isSignedIn };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\r\n"]},"metadata":{},"sourceType":"module"}